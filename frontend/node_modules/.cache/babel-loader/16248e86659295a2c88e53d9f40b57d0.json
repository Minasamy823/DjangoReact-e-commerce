{"ast":null,"code":"var _jsxFileName = \"/home/mina/environments/djangoreactproject/frontend/src/Components/Createuser/Createuser.js\";\nimport React, { Component } from 'react';\nimport Customerservices from \"./Customerservices\";\nimport axios from 'axios';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nconst customerservices = new Customerservices();\nexport default class Createuser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      Email: \"\",\n      passw: \"\",\n      passwmatch: \"\",\n      nameerror: \"\",\n      emailerror: \"\",\n      passwerror: \"\",\n      passwmatcherror: \"\"\n    };\n\n    this.userchange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.emailhandler = event => {\n      this.setState({\n        Email: event.target.value\n      });\n    };\n\n    this.passwhandler = event => {\n      this.setState({\n        passw: event.target.value\n      });\n    };\n\n    this.passmatchwhandler = event => {\n      this.setState({\n        passwmatch: event.target.value\n      });\n    };\n\n    this.validation = () => {\n      let nameerror = \"\";\n      let emailerror = \"\";\n      let passwerror = \"\";\n      let passwmatcherror = \"\";\n\n      if (!this.state.name) {\n        nameerror = \"This field is required\";\n      }\n\n      if (!this.state.Email || !this.state.Email.includes('@') || !this.state.Email.includes('.') || !this.state.Email.includes('com')) {\n        emailerror = \"Invalid Email\";\n      }\n\n      if (!this.state.passw || this.state.passw.length < 8) {\n        passwerror = \"Password should be at least 8 characs\";\n      }\n\n      if (!this.state.passwmatch || this.state.passwmatch !== this.state.passw) {\n        passwmatcherror = \"The pass didn't match\";\n      }\n\n      if (nameerror || emailerror || passwerror || passwmatcherror) {\n        this.setState({\n          nameerror,\n          emailerror,\n          passwerror,\n          passwmatcherror\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.sendingdata = () => {\n      customerservices.createcustomer({\n        'name': this.refs.name.value,\n        'email': this.refs.email.value,\n        'password': this.refs.password.value\n      }).then(res => {\n        const token = res.data.token; // you should firstly fetch the token from the data to be known\n\n        localStorage.setItem('id_token', token); // Store token\n      }).then(result => {\n        console.log(result);\n        alert(\"Created\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.submithandle = e => {\n      e.preventDefault();\n      let validate = this.validation();\n\n      if (validate) {\n        this.setState({\n          nameerror: \"\"\n        });\n        this.setState({\n          emailerror: \"\"\n        });\n        this.setState({\n          passwerror: \"\"\n        });\n        this.setState({\n          passwmatcherror: \"\"\n        });\n        this.sendingdata();\n      }\n    };\n  }\n\n  render() {\n    return (// <form onSubmit={this.submithandle}>\n      // <div className='Createuser'>\n      //   <h style={{MarginRight:40 }}> Register </h>\n      //   <br/>\n      //   <br/>\n      //      <p>Username</p>\n      //         <input\n      //             ref='name'\n      //             type=\"text\"\n      //             placeholder=\"User\"\n      //             value={this.state.name}\n      //             onChange={this.userchange}/>\n      //      <div style={{color: \"red\"}}> {this.state.nameerror}</div>\n      //      <br/>\n      //      <p> Email </p>\n      //\n      //         <input\n      //             ref='email'\n      //             type=\"text\"\n      //             placeholder=\"Email\"\n      //             value={this.state.Email}\n      //             onChange={this.emailhandler}/>\n      //      <div style={{color: \"red\"}}> {this.state.emailerror}</div>\n      //      <br/>\n      //       <p> Password </p>\n      //          <input\n      //              ref='password'\n      //              type=\"Password\"\n      //              placeholder=\"Password\"\n      //              value={this.state.Passw}\n      //              onChange={this.passwhandler}/>\n      //      <div style={{color: \"red\"}}> {this.state.passwerror}</div>\n      //\n      //      <br/>\n      //      <p> confirm Password </p>\n      //         <input\n      //             type=\"Password\"\n      //             placeholder=\"confirm Password\"\n      //             value={this.state.passwmatch}\n      //             onChange={this.passmatchwhandler}/>\n      //      <div style={{color: \"red\"}}> {this.state.passwmatcherror}</div>\n      //\n      //       <button> Register </button>\n      React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100vh'\n        },\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"grey\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Form, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"E-mail address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"grey\",\n        fluid: true,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Login\"))), React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"New to us? \", React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Sign Up\")))) //   </div>\n      // </form>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/mina/environments/djangoreactproject/frontend/src/Components/Createuser/Createuser.js"],"names":["React","Component","Customerservices","axios","Button","Form","Grid","Header","Image","Message","Segment","customerservices","Createuser","state","name","Email","passw","passwmatch","nameerror","emailerror","passwerror","passwmatcherror","userchange","event","setState","target","value","emailhandler","passwhandler","passmatchwhandler","validation","includes","length","sendingdata","createcustomer","refs","email","password","then","res","token","data","localStorage","setItem","result","console","log","alert","catch","error","submithandle","e","preventDefault","validate","render","height","maxWidth"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Customerservices from \"./Customerservices\";\nimport axios from 'axios';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\n\n\n\nconst customerservices = new Customerservices();\n\nexport default class Createuser extends Component{\n\n  state={\n    name:\"\",\n    Email:\"\",\n    passw:\"\",\n    passwmatch:\"\",\n    nameerror:\"\",\n    emailerror:\"\",\n    passwerror:\"\",\n    passwmatcherror:\"\"\n  }\n\n\n  userchange =(event)=>{\n    this.setState({name: event.target.value})\n  }\n  emailhandler =(event)=>{\n    this.setState({Email:event.target.value})\n  }\n  passwhandler =(event)=>{\n    this.setState({passw:event.target.value})\n  }\n  passmatchwhandler =(event)=>{\n    this.setState({passwmatch:event.target.value})\n  }\n\n  validation=()=>{\n      let nameerror = \"\";\n      let emailerror = \"\";\n      let passwerror = \"\";\n      let passwmatcherror = \"\";\n\n      if (!this.state.name) {\n        nameerror= \"This field is required\"\n        }\n      if (!this.state.Email || !this.state.Email.includes('@') || !this.state.Email.includes('.')||!this.state.Email.includes('com')) {\n        emailerror=\"Invalid Email\"\n      }\n      if (!this.state.passw ||this.state.passw.length < 8) {\n        passwerror=\"Password should be at least 8 characs\"\n      }\n      if (!this.state.passwmatch||this.state.passwmatch !== this.state.passw) {\n        passwmatcherror=\"The pass didn't match\"\n\n      }\n      if (nameerror||emailerror||passwerror||passwmatcherror) {\n            this.setState({nameerror,emailerror,passwerror,passwmatcherror});\n            return false;\n            }\n      return true\n\n    }\n\n\n\n  sendingdata =()=>{\n    customerservices.createcustomer({\n      'name':this.refs.name.value,\n      'email':this.refs.email.value,\n      'password':this.refs.password.value\n    }).then(res => {\n        const token = res.data.token // you should firstly fetch the token from the data to be known\n        localStorage.setItem('id_token', token) // Store token\n    }).then((result)=> {\n      console.log(result);\n      alert(\"Created\");\n    }).catch((error)=>{\n      console.log(error);\n    })\n\n}\n  submithandle=(e)=>{\n    e.preventDefault();\n    let validate = this.validation();\n    if (validate) {\n      this.setState({nameerror:\"\"})\n      this.setState({emailerror:\"\"})\n      this.setState({passwerror:\"\"})\n      this.setState({passwmatcherror:\"\"})\n      this.sendingdata();\n    }\n\n\n  }\n\n\n\n\n\n  render(){\n    return(\n\n       // <form onSubmit={this.submithandle}>\n       // <div className='Createuser'>\n       //   <h style={{MarginRight:40 }}> Register </h>\n       //   <br/>\n       //   <br/>\n       //      <p>Username</p>\n       //         <input\n       //             ref='name'\n       //             type=\"text\"\n       //             placeholder=\"User\"\n       //             value={this.state.name}\n       //             onChange={this.userchange}/>\n       //      <div style={{color: \"red\"}}> {this.state.nameerror}</div>\n       //      <br/>\n       //      <p> Email </p>\n       //\n       //         <input\n       //             ref='email'\n       //             type=\"text\"\n       //             placeholder=\"Email\"\n       //             value={this.state.Email}\n       //             onChange={this.emailhandler}/>\n       //      <div style={{color: \"red\"}}> {this.state.emailerror}</div>\n       //      <br/>\n       //       <p> Password </p>\n       //          <input\n       //              ref='password'\n       //              type=\"Password\"\n       //              placeholder=\"Password\"\n       //              value={this.state.Passw}\n       //              onChange={this.passwhandler}/>\n       //      <div style={{color: \"red\"}}> {this.state.passwerror}</div>\n       //\n       //      <br/>\n       //      <p> confirm Password </p>\n       //         <input\n       //             type=\"Password\"\n       //             placeholder=\"confirm Password\"\n       //             value={this.state.passwmatch}\n       //             onChange={this.passmatchwhandler}/>\n       //      <div style={{color: \"red\"}}> {this.state.passwmatcherror}</div>\n       //\n       //       <button> Register </button>\n       <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Header as='h2' color='grey' textAlign='center'>\n         Register\n      </Header>\n      <Form size='large'>\n        <Segment stacked>\n          <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n          <Form.Input\n            fluid\n            icon='lock'\n            iconPosition='left'\n            placeholder='Password'\n            type='password'\n          />\n\n          <Button color='grey' fluid size='large'>\n            Login\n          </Button>\n        </Segment>\n      </Form>\n      <Message>\n        New to us? <a href='#'>Sign Up</a>\n      </Message>\n    </Grid.Column>\n  </Grid>\n\n\n\n\n\n\n\n\n      //   </div>\n      // </form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}