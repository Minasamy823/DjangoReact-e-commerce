{"ast":null,"code":"var _jsxFileName = \"/home/mina/environments/djangoreactproject/frontend/src/Components/checkout/checkout.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport { injectStripe, CardElement } from \"react-stripe-elements\";\nimport { Container, Header, Button } from 'semantic-ui-react';\nimport './checkout.css';\nimport { Redirect } from 'react-router-dom'; //CheckoutForm renders the input field and a button and injects\n//this.props.stripe.createToken  via props\n//The token with the encrypted credit card info is sent to my backend\n// So I can send it to stripe\n\nclass CheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resp_message: \"\",\n      card_errors: \"\" // redirecting = () =>{\n      //   return (\n      //   this.state.resp_message ? <Redirect to= \"/products\" /> : null)\n      // }\n\n    };\n\n    this.handleCardErrors = card_dets => {\n      console.log(\"Card Section dets\", card_dets);\n      this.setState({\n        resp_message: \"\"\n      });\n\n      if (card_dets.error) {\n        this.setState({\n          card_errors: card_dets.error.message\n        });\n      } else {\n        this.setState({\n          card_errors: \"\"\n        });\n      }\n    };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    let _ref = await this.props.stripe.createToken({\n      name: \"m\"\n    }),\n        token = _ref.token;\n\n    let formData = new FormData();\n    formData.append(\"source\", token.id);\n    formData.append(\"amount\", this.props.total);\n    let response = axios.post(\"https://herokudjangodata.herokuapp.com/payment\", formData).then(res => {\n      this.setState({\n        resp_message: res.data\n      });\n\n      if (res.data) {\n        return alert(\"Thanks for your Truth\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"checkout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#fcd669\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"  Total = \", this.props.total, \" $ \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"  \", React.createElement(\"input\", {\n      className: \"fields\",\n      placeholder: \"First name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"  \", React.createElement(\"input\", {\n      className: \"fields\",\n      placeholder: \"Last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"   \", React.createElement(\"input\", {\n      className: \"fields\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"   \", React.createElement(\"input\", {\n      className: \"fields\",\n      placeholder: \"Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \" \"), React.createElement(CardElement, {\n      onChange: this.handleCardErrors,\n      className: \"fields cart_paying\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.card_errors), React.createElement(\"button\", {\n      style: {\n        backgroundColor: \"#fcd669\"\n      },\n      className: \"button fields\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Confirm order\"), this.state.resp_message ? React.createElement(Redirect, {\n      to: \"/products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : null));\n  }\n\n} //The injectStripe HOC provides the this.props.stripe property\n//You can call this.props.stripe.createToken within a component that has been\n// injected in order to submit payment data to Stripe.\n\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/home/mina/environments/djangoreactproject/frontend/src/Components/checkout/checkout.js"],"names":["React","axios","injectStripe","CardElement","Container","Header","Button","Redirect","CheckoutForm","Component","constructor","props","state","resp_message","card_errors","handleCardErrors","card_dets","console","log","setState","error","message","submit","bind","ev","stripe","createToken","name","token","formData","FormData","append","id","total","response","post","then","res","data","alert","render","color","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios'\nimport { injectStripe, CardElement } from \"react-stripe-elements\";\nimport { Container, Header, Button } from 'semantic-ui-react'\nimport './checkout.css'\nimport { Redirect } from 'react-router-dom'\n//CheckoutForm renders the input field and a button and injects\n//this.props.stripe.createToken  via props\n//The token with the encrypted credit card info is sent to my backend\n// So I can send it to stripe\n\nclass CheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n  state = {\n    resp_message: \"\",\n    card_errors: \"\"\n  }\n\n  // redirecting = () =>{\n  //   return (\n  //   this.state.resp_message ? <Redirect to= \"/products\" /> : null)\n  // }\n\n  handleCardErrors = card_dets => {\n    console.log(\"Card Section dets\", card_dets);\n    this.setState({resp_message: \"\"})\n    if (card_dets.error) {\n      this.setState({ card_errors: card_dets.error.message });\n    } else {\n      this.setState({ card_errors: \"\" });\n    }\n  };\n\n  async submit (ev) {\n\n  let {token} = await this.props.stripe.createToken({name: \"m\"})\n  let formData = new FormData();\n  formData.append(\"source\", token.id);\n  formData.append(\"amount\", this.props.total);\n  let response = axios.post(\"https://herokudjangodata.herokuapp.com/payment\", formData)\n  .then((res)=>{\n  this.setState({resp_message: res.data})\n  if (res.data) {\n    return (\n    alert(\"Thanks for your Truth\")\n  )}\n\n\n\n})\n}\n\n\n\n  render() {\n    return (\n      <div className='checkout'>\n\n        <div className=\"info\">\n          <p style={{color: \"#fcd669\" }}>  Total = {this.props.total} $ </p>\n          <p>  <input className=\"fields\"  placeholder=\"First name\"/>  </p>\n          <p>  <input className=\"fields\"  placeholder=\"Last name\"/> </p>\n          <p>   <input className=\"fields\"  placeholder=\"Email\"/> </p>\n          <p>   <input className=\"fields\"  placeholder=\"Address\"/> </p>\n\n\n            <CardElement onChange={this.handleCardErrors}\n            className=\"fields cart_paying\"\n             />\n\n              <p>{this.state.card_errors}</p>\n\n\n            <button  style = {{backgroundColor: \"#fcd669\"}}\n            className=\"button fields\"\n            onClick={this.submit} >\n            Confirm order</button>\n            {this.state.resp_message ? <Redirect to=\"/products\"/> :null}\n\n\n          </div>\n      </div>\n    );\n  }\n}\n\n//The injectStripe HOC provides the this.props.stripe property\n//You can call this.props.stripe.createToken within a component that has been\n// injected in order to submit payment data to Stripe.\nexport default injectStripe(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}