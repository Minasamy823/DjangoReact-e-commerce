{"ast":null,"code":"var _jsxFileName = \"/home/mina/environments/djangoreactproject/frontend/src/Components/Createuser/Login.js\";\nimport React, { Component } from 'react';\nimport Customerservices from \"./Customerservices\";\nimport axios from 'axios';\nimport Createuser from './Createuser.css';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nconst customerservices = new Customerservices();\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Email: \"\",\n      passw: \"\",\n      emailerror: \"\",\n      passwerror: \"\"\n    };\n\n    this.emailhandler = event => {\n      this.setState({\n        Email: event.target.value\n      });\n    };\n\n    this.passwhandler = event => {\n      this.setState({\n        passw: event.target.value\n      });\n    };\n\n    this.validation = () => {\n      let emailerror = \"\";\n      let passwerror = \"\";\n\n      if (!this.state.Email || !this.state.Email.includes('@') || !this.state.Email.includes('.') || !this.state.Email.includes('com')) {\n        emailerror = \"Invalid Email\";\n      }\n\n      if (!this.state.passw || this.state.passw.length < 8) {\n        passwerror = \"Password should be at least 8 characs\";\n      }\n\n      if (emailerror || passwerror) {\n        this.setState({\n          emailerror,\n          passwerror\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.sendingdata = () => {\n      customerservices.login({\n        'username': '{this.state.Email}',\n        'password': '{this.state.passw}'\n      }).then(res => {\n        const token = res.data.token; // you should firstly fetch the token from the data to be known\n\n        localStorage.setItem('id_token', token); // Store token\n      }).then(result => {\n        console.log(result);\n        alert(\"Loggedin\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.submithandle = e => {\n      e.preventDefault();\n      let validate = this.validation();\n\n      if (validate) {\n        this.setState({\n          emailerror: \"\"\n        });\n        this.setState({\n          passwerror: \"\"\n        });\n      }\n\n      if (this.state.Email && this.state.passw) {\n        this.sendingdata();\n      } else {\n        React.createElement(Segment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Dimmer, {\n          active: true,\n          inverted: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Loading\")), React.createElement(Image, {\n          src: \"https://react.semantic-ui.com/images/wireframe/paragraph.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  render() {\n    return (// <form onSubmit={this.submithandle}>\n      // <div className='Createuser'>\n      //   <h style={{MarginRight:40 }}> login </h>\n      //   <br/>\n      //   <br/>\n      //      <p> Email </p>\n      //\n      //         <input\n      //             ref='email'\n      //             type=\"text\"\n      //             placeholder=\"Email\"\n      //             value={this.state.Email}\n      //             onChange={this.emailhandler}/>\n      //      <div style={{color: \"red\"}}> {this.state.emailerror}</div>\n      //      <br/>\n      //       <p> Password </p>\n      //          <input\n      //              ref='password'\n      //              type=\"Password\"\n      //              placeholder=\"Password\"\n      //              value={this.state.Passw}\n      //              onChange={this.passwhandler}/>\n      //      <div style={{color: \"red\"}}> {this.state.passwerror}</div>\n      //\n      //       <button> Login </button>\n      //    </div>\n      React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100vh'\n        },\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Form, {\n        size: \"large\",\n        onSubmit: this.submithandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"E-mail address\",\n        type: \"email\",\n        value: this.state.Email,\n        onChange: this.emailhandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \" \", this.state.emailerror), React.createElement(Form.Input, {\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.Passw,\n        onChange: this.passwhandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \" \", this.state.passwerror), React.createElement(Button, {\n        color: \"teal\",\n        fluid: true,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Login\"))), React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"New to us? \", React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Sign Up\")))) // </form>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/mina/environments/djangoreactproject/frontend/src/Components/Createuser/Login.js"],"names":["React","Component","Customerservices","axios","Createuser","Button","Form","Grid","Header","Image","Message","Segment","Dimmer","Loader","customerservices","Login","state","Email","passw","emailerror","passwerror","emailhandler","event","setState","target","value","passwhandler","validation","includes","length","sendingdata","login","then","res","token","data","localStorage","setItem","result","console","log","alert","catch","error","submithandle","e","preventDefault","validate","render","height","maxWidth","color","Passw"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Customerservices from \"./Customerservices\";\nimport axios from 'axios';\nimport Createuser from './Createuser.css'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\n\nconst customerservices = new Customerservices();\n\nexport default class Login extends Component{\n\n  state={\n\n    Email:\"\",\n    passw:\"\",\n    emailerror:\"\",\n    passwerror:\"\",\n\n  }\n\n\n\n  emailhandler =(event)=>{\n    this.setState({Email:event.target.value})\n  }\n  passwhandler =(event)=>{\n    this.setState({passw:event.target.value})\n  }\n\n\n  validation=()=>{\n\n      let emailerror = \"\";\n      let passwerror = \"\";\n\n\n\n      if (!this.state.Email || !this.state.Email.includes('@') || !this.state.Email.includes('.')||!this.state.Email.includes('com')) {\n        emailerror=\"Invalid Email\"\n      }\n      if (!this.state.passw ||this.state.passw.length < 8) {\n        passwerror=\"Password should be at least 8 characs\"\n      }\n\n      if (emailerror || passwerror) {\n            this.setState({emailerror,passwerror});\n            return false;\n            }\n      return true\n\n    }\n\n\n\n  sendingdata =()=>{\n    customerservices.login({\n      'username':'{this.state.Email}',\n      'password':'{this.state.passw}'\n    }).then(res => {\n        const token = res.data.token // you should firstly fetch the token from the data to be known\n        localStorage.setItem('id_token', token) // Store token\n    }).then((result)=> {\n      console.log(result);\n      alert(\"Loggedin\");\n    }).catch((error)=>{\n      console.log(error);\n    })\n\n}\n  submithandle=(e)=>{\n    e.preventDefault();\n    let validate = this.validation();\n    if (validate) {\n\n      this.setState({emailerror:\"\"})\n      this.setState({passwerror:\"\"})}\n    if (this.state.Email && this.state.passw){\n        this.sendingdata()}\n\n    else{\n      <Segment>\n          <Dimmer active inverted>\n            <Loader size='large'>Loading</Loader>\n          </Dimmer>\n\n          <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n      </Segment>\n    }\n\n\n\n\n\n\n}\n\n\n\n\n  render(){\n    return(\n\n       // <form onSubmit={this.submithandle}>\n       // <div className='Createuser'>\n       //   <h style={{MarginRight:40 }}> login </h>\n       //   <br/>\n       //   <br/>\n       //      <p> Email </p>\n       //\n       //         <input\n       //             ref='email'\n       //             type=\"text\"\n       //             placeholder=\"Email\"\n       //             value={this.state.Email}\n       //             onChange={this.emailhandler}/>\n       //      <div style={{color: \"red\"}}> {this.state.emailerror}</div>\n       //      <br/>\n       //       <p> Password </p>\n       //          <input\n       //              ref='password'\n       //              type=\"Password\"\n       //              placeholder=\"Password\"\n       //              value={this.state.Passw}\n       //              onChange={this.passwhandler}/>\n       //      <div style={{color: \"red\"}}> {this.state.passwerror}</div>\n       //\n       //       <button> Login </button>\n       //    </div>\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'  >\n              <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' color='black' textAlign='center'>\n                   Login\n                </Header>\n                <Form size='large' onSubmit={this.submithandle}>\n                  <Segment stacked>\n                    <Form.Input\n\n                        icon='user'\n                        iconPosition='left'\n                        placeholder='E-mail address'\n                        type='email'\n                        value={this.state.Email}\n                        onChange={this.emailhandler}\n\n\n                        />\n                    <div style={{color: \"red\"}}> {this.state.emailerror}</div>\n                    <Form.Input\n\n                      icon='lock'\n                      iconPosition='left'\n                      placeholder='Password'\n                      type='password'\n                      value={this.state.Passw}\n                      onChange={this.passwhandler}\n\n                    />\n                    <div style={{color: \"red\"}}> {this.state.passwerror}</div>\n                    <Button color='teal' fluid size='large'>\n                      Login\n                    </Button>\n                  </Segment>\n                </Form>\n                <Message>\n                  New to us? <a href='#'>Sign Up</a>\n                </Message>\n              </Grid.Column>\n            </Grid>\n      // </form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}