"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  indicator: function indicator(_ref) {
    var p = _ref.props,
        v = _ref.variables;
    return {
      // Reset existing styles from base theme
      animationName: 'none',
      animationDuration: 'unset',
      animationIterationCount: 'unset',
      animationTimingFunction: 'unset',
      borderColor: 'transparent',
      borderRadius: 0,
      borderStyle: 'none',
      borderWidth: 0,
      height: v.containerHeights[p.size],
      width: v.containerWidths[p.size],
      overflow: 'hidden'
    };
  },
  svg: function svg(_ref2) {
    var p = _ref2.props,
        t = _ref2.theme,
        v = _ref2.variables;
    var outerAnimation = {
      animationName: {
        to: {
          opacity: 1
        }
      },
      animationDelay: '1.5s',
      animationDirection: 'normal',
      animationDuration: '.3s',
      animationFillMode: 'both',
      animationIterationCount: '1',
      animationPlayState: 'running',
      animationTimingFunction: 'ease-out',
      display: 'block',
      overflow: 'hidden',
      position: 'relative'
    };
    var svgAnimation = {
      animationName: {
        to: {
          transform: "translate3d(0, ".concat(v.svgTranslatePosition[p.size], ", 0)")
        }
      },
      animationDelay: '0s',
      animationDirection: 'normal',
      animationDuration: '2s',
      animationFillMode: 'both',
      animationPlayState: 'running',
      animationTimingFunction: 'steps(60, end)',
      animationIterationCount: 'infinite'
    };
    return Object.assign({}, outerAnimation, {
      ':before': Object.assign({}, svgAnimation, {
        backgroundImage: v.svgContent,
        content: '" "',
        display: 'block',
        overflow: 'hidden',
        height: v.svgHeights[p.size],
        width: v.svgWidths[p.size]
      })
    });
  }
};
exports.default = _default;