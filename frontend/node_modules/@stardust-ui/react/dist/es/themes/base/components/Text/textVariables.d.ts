import { ColorSchemeMapping } from '../../../types';
export interface TextVariables<TColorSchemeMapping = ColorSchemeMapping> {
    colorScheme: TColorSchemeMapping;
    atMentionMeColor: string;
    atMentionOtherColor: string;
    importantColor: string;
    timestampColor: string;
    disabledColor: string;
    errorColor: string;
    successColor: string;
    fontSizeSmallest: string;
    fontSizeSmaller: string;
    fontSizeSmall: string;
    fontSizeMedium: string;
    fontSizeLarge: string;
    fontSizeLarger: string;
    fontSizeLargest: string;
    fontLineHeightSmallest: number;
    fontLineHeightSmaller: number;
    fontLineHeightSmall: number;
    fontLineHeightMedium: number;
    fontLineHeightLarge: number;
    fontLineHeightLarger: number;
    fontLineHeightLargest: number;
    fontWeightLight: number;
    fontWeightSemilight: number;
    fontWeightRegular: number;
    fontWeightSemibold: number;
    fontWeightBold: number;
}
declare const _default: (siteVariables: any) => TextVariables<ColorSchemeMapping<import("../../../..").Extendable<Record<import("../../../types").ComponentAreaName, string>, string>, "blue" | "green" | "grey" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "secondary" | "primary">>;
export default _default;
