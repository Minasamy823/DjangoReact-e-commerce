import * as React from 'react';
import { ShorthandValue, Props, PropsOf, ShorthandRenderCallback, ShorthandRenderFunction } from '../types';
interface CreateShorthandOptions {
    /** Default props object */
    defaultProps?: Props;
    /** Override props object or function (called with regular props) */
    overrideProps?: (Props & ((props: Props) => Props)) | Props;
    /** Whether or not automatic key generation is allowed */
    generateKey?: boolean;
    /** Override the default render implementation. */
    render?: ShorthandRenderFunction;
}
/** A more robust React.createElement. It can create elements from primitive values. */
export declare function createShorthand({ allowsJSX, Component, mappedProp, mappedArrayProp, valueOrRenderCallback, options, }: {
    Component: React.ElementType;
    allowsJSX?: boolean;
    mappedProp?: string;
    mappedArrayProp?: string;
    valueOrRenderCallback?: ShorthandValue<Props> | ShorthandRenderCallback;
    options?: CreateShorthandOptions;
}): React.ReactElement<Props> | null | undefined;
declare type CreateShorthandFactoryConfigInner<TPropName = string> = {
    allowsJSX?: boolean;
    Component: React.ElementType;
    mappedProp?: TPropName;
    mappedArrayProp?: TPropName;
};
export declare type CreateShorthandFactoryConfig = CreateShorthandFactoryConfigInner;
export declare type ShorthandFactory<P> = (value: ShorthandValue<P>, options?: CreateShorthandOptions) => React.ReactElement | null | undefined;
/**
 * @param {Object} config Options passed to factory
 * @param {React.ElementType} config.Component A ReactClass or string
 * @param {string} config.mappedProp A function that maps a primitive value to the Component props
 * @param {string} config.mappedArrayProp A function that maps an array value to the Component props
 * @param {string} config.allowsJSX Indicates if factory supports React Elements
 * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.
 */
export declare function createShorthandFactory<TStringElement extends keyof JSX.IntrinsicElements, P>(config: {
    Component: TStringElement;
    mappedProp?: keyof PropsOf<TStringElement>;
    mappedArrayProp?: keyof PropsOf<TStringElement>;
    allowsJSX?: boolean;
}): ShorthandFactory<P>;
export declare function createShorthandFactory<TFunctionComponent extends React.FunctionComponent, P>(config: {
    Component: TFunctionComponent;
    mappedProp?: keyof PropsOf<TFunctionComponent>;
    mappedArrayProp?: keyof PropsOf<TFunctionComponent>;
    allowsJSX?: boolean;
}): ShorthandFactory<P>;
export declare function createShorthandFactory<TInstance extends React.Component, P>(config: {
    Component: {
        new (...args: any[]): TInstance;
    };
    mappedProp?: keyof PropsOf<TInstance>;
    mappedArrayProp?: keyof PropsOf<TInstance>;
    allowsJSX?: boolean;
}): ShorthandFactory<P>;
export {};
