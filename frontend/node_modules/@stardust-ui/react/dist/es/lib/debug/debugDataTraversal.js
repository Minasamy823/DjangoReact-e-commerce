import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { isNotNullOrEmpty, isNotEmptyObjectsArray } from './utils';

var traverseComponentThemeStyles = function traverseComponentThemeStyles(componentStyles, filterData) {
  if (!componentStyles) return {};
  return Object.keys(componentStyles).reduce(function (acc, slotName) {
    var slotStyles = componentStyles[slotName];
    var filteredSlotStyles = filterData(slotStyles);
    return isNotNullOrEmpty(filteredSlotStyles) ? Object.assign({}, acc, _defineProperty({}, slotName, filteredSlotStyles)) : acc;
  }, {});
};

var traverseComponentStyles = function traverseComponentStyles(stylesDebugOutput, filterData) {
  var filteredThemes = stylesDebugOutput.themes.map(function (theme) {
    return traverseComponentThemeStyles(theme.resolved, filterData);
  });
  var filteredInstance = filterData(stylesDebugOutput.instanceOverrides && stylesDebugOutput.instanceOverrides.resolved || {});
  var filteredResult = traverseComponentThemeStyles(stylesDebugOutput.result, filterData);
  return Object.assign({}, isNotEmptyObjectsArray(filteredThemes) && {
    themes: filteredThemes
  }, isNotNullOrEmpty(filteredInstance) && {
    instanceOverrides: filteredInstance
  }, isNotNullOrEmpty(filteredResult) && {
    result: filteredResult
  });
};

var traverseComponentVariables = function traverseComponentVariables(variablesDebugOutput, filterData) {
  var filteredThemes = variablesDebugOutput.themes.map(function (theme) {
    return filterData(theme.resolved);
  });
  var filteredInstance = filterData(variablesDebugOutput.instanceOverrides && variablesDebugOutput.instanceOverrides.resolved || {});
  var filteredResult = filterData(variablesDebugOutput.result);
  return Object.assign({}, isNotEmptyObjectsArray(filteredThemes) && {
    themes: filteredThemes
  }, isNotNullOrEmpty(filteredInstance) && {
    instanceOverrides: filteredInstance
  }, isNotNullOrEmpty(filteredResult) && {
    result: filteredResult
  });
};

var traverse = function traverse(debugOutput, filterData) {
  var stylesResult = traverseComponentStyles(debugOutput.styles, filterData);
  var variablesResult = traverseComponentVariables(debugOutput.variables, filterData);
  var siteVariablesResult = traverseComponentVariables(debugOutput.siteVariables, filterData);
  var result = Object.assign({}, isNotNullOrEmpty(stylesResult) && {
    styles: stylesResult
  }, isNotNullOrEmpty(variablesResult) && {
    variables: variablesResult
  }, isNotNullOrEmpty(siteVariablesResult) && {
    siteVariables: siteVariablesResult
  });
  return isNotNullOrEmpty(result) ? Object.assign({
    componentName: debugOutput.componentName
  }, result) : {};
};

export default traverse;